{
  "info": {
    "name": "User_CRUD",
    "_postman_id": "22222222-2222-2222-2222-222222222222",
    "description": "Basic Create, Read, Update, Delete on JSONPlaceholder users",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET Users",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', () => pm.response.to.have.status(200));",
              "const arr = pm.response.json();",
              "pm.test('At least one user', () => pm.expect(arr.length).to.be.above(0));"
            ]
          }
        }
      ]
    },
    {
      "name": "GET Single User",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/users/1",
          "host": ["{{baseUrl}}"],
          "path": ["users","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.test('Has id=1', () => pm.expect(json.id).to.eql(1));"
            ]
          }
        }
      ]
    },
    {
      "name": "CREATE User",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": ["{{baseUrl}}"],
          "path": ["users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 201', () => pm.response.to.have.status(201));",
              "const j=pm.response.json();",
              "pm.test('Returned name correct', () => pm.expect(j.name).to.eql('John Doe'));"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE User",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "{{baseUrl}}/users/1",
          "host": ["{{baseUrl}}"],
          "path": ["users","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200 or 204', () => pm.expect(pm.response.code).to.be.oneOf([200,204]));"
            ]
          }
        }
      ]
    }
  ]
}
